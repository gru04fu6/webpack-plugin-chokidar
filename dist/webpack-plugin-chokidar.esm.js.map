{"version":3,"file":"webpack-plugin-chokidar.esm.js","sources":["../src/index.ts"],"sourcesContent":["\nimport { watch } from 'chokidar';\nimport { WatchOptions, FSWatcher } from 'chokidar';\nimport { Stats } from 'fs';\n\ndeclare type eventName = 'add' | 'addDir' | 'change' | 'unlink' | 'unlinkDir';\nexport interface Target {\n    compiler: any;\n    compilation: any;\n    watcher: FSWatcher;\n}\nexport interface ChokidarPluginFileEvent {\n    ready(target: Target): void;\n    add(target: Target, path: string, status?: Stats): void;\n    addDir(target: Target, path: string, status?: Stats): void;\n    change(target: Target, path: string, status?: Stats): void;\n    unlink(target: Target, path: string, status?: Stats): void;\n    unlinkDir(target: Target, path: string, status?: Stats): void;\n    raw(target: Target, eventName: string, path: string, details: any): void;\n    all(target: Target, eventName: eventName, path: string, status?: Stats): void;\n    error(target: Target, e: Error): void;\n}\nexport interface ChokidarEvent {\n    on?: Partial<ChokidarPluginFileEvent>;\n    close?: Promise<void>;\n    add?(paths: string | ReadonlyArray<string>): void;\n    unwatch?(paths: string | ReadonlyArray<string>): void;\n    getWatched?(): {\n        [directory: string]: string[];\n    };\n}\nexport interface ChokidarConfig {\n    file: string | ReadonlyArray<string>;\n    opt: WatchOptions;\n    actions: ChokidarEvent;\n}\nexport interface PluginOption {\n    chokidarConfigList: ChokidarConfig[];\n}\n\nclass ChokidarPlugin {\n    PluginName: string;\n    options: PluginOption;\n    listening: boolean;\n\n    constructor(options: PluginOption) {\n        this.PluginName = 'ChokidarPlugin';\n        this.options = options;\n        this.listening = false;\n    }\n\n    apply(compiler: any) {\n        compiler.hooks.watchRun.tapAsync(this.PluginName, (compilation: any, callback: any) => {\n            if (this.listening) callback();\n            const { chokidarConfigList = [] } = this.options;\n\n            for(const _ret of chokidarConfigList) {\n              const { file, opt, actions } = _ret;\n\n              if (!actions || !Object.keys(actions).length) continue;\n\n              const watcher = watch(file, opt);\n\n              Object.entries(actions).forEach(action => {\n                  const [listen, cbs] = action;\n\n                  if (listen === 'on') {\n                      Object.entries(cbs as ChokidarPluginFileEvent).forEach( _ref => {\n                          const [name, cb] = _ref;\n\n                          watcher[listen](name, (...args) => {\n                              cb({\n                                  compiler,\n                                  compilation,\n                                  watcher\n                              }, ...args);\n                          });\n                      });\n                  }\n\n              });\n            }\n\n            this.listening = true;\n            callback();\n        });\n    }\n}\n\nmodule.exports = ChokidarPlugin;\n"],"names":["ChokidarPlugin","options","PluginName","listening","apply","compiler","hooks","watchRun","tapAsync","compilation","callback","chokidarConfigList","_ret","file","opt","actions","Object","keys","length","watcher","watch","entries","forEach","action","listen","cbs","_ref","name","cb","args","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwCMA;AAKF,0BAAYC,OAAZ;AACI,SAAKC,UAAL,GAAkB,gBAAlB;AACA,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKE,SAAL,GAAiB,KAAjB;AACH;;;;SAEDC,QAAA,eAAMC,QAAN;;;AACIA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,QAAf,CAAwBC,QAAxB,CAAiC,KAAKN,UAAtC,EAAkD,UAACO,WAAD,EAAmBC,QAAnB;AAC9C,UAAI,KAAI,CAACP,SAAT,EAAoBO,QAAQ;AAC5B,kCAAoC,KAAI,CAACT,OAAzC,CAAQU,kBAAR;AAAA,UAAQA,kBAAR,sCAA6B,EAA7B;;;YAEUC;AACR,YAAQC,IAAR,GAA+BD,IAA/B,CAAQC,IAAR;AAAA,YAAcC,GAAd,GAA+BF,IAA/B,CAAcE,GAAd;AAAA,YAAmBC,OAAnB,GAA+BH,IAA/B,CAAmBG,OAAnB;AAEA,YAAI,CAACA,OAAD,IAAY,CAACC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,MAAtC,EAA8C;AAE9C,YAAMC,OAAO,GAAGC,KAAK,CAACP,IAAD,EAAOC,GAAP,CAArB;AAEAE,QAAAA,MAAM,CAACK,OAAP,CAAeN,OAAf,EAAwBO,OAAxB,CAAgC,UAAAC,MAAM;AAClC,cAAOC,MAAP,GAAsBD,MAAtB;AAAA,cAAeE,GAAf,GAAsBF,MAAtB;;AAEA,cAAIC,MAAM,KAAK,IAAf,EAAqB;AACjBR,YAAAA,MAAM,CAACK,OAAP,CAAeI,GAAf,EAA+CH,OAA/C,CAAwD,UAAAI,IAAI;AACxD,kBAAOC,IAAP,GAAmBD,IAAnB;AAAA,kBAAaE,EAAb,GAAmBF,IAAnB;AAEAP,cAAAA,OAAO,CAACK,MAAD,CAAP,CAAgBG,IAAhB,EAAsB;kDAAIE;AAAAA,kBAAAA;;;AACtBD,gBAAAA,EAAE,MAAF,UAAG;AACCvB,kBAAAA,QAAQ,EAARA,QADD;AAECI,kBAAAA,WAAW,EAAXA,WAFD;AAGCU,kBAAAA,OAAO,EAAPA;AAHD,iBAAH,SAIMU,IAJN;AAKH,eAND;AAOH,aAVD;AAWH;AAEJ,SAjBD;;;AAPF,2DAAkBlB,kBAAlB,wCAAsC;AAAA;;AAAA,kCAGU;AAsB/C;;AAED,MAAA,KAAI,CAACR,SAAL,GAAiB,IAAjB;AACAO,MAAAA,QAAQ;AACX,KAjCD;AAkCH;;;;;AAGLoB,MAAM,CAACC,OAAP,GAAiB/B,cAAjB"}